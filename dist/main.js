!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n(1);var i,o=n(2);new((i=o)&&i.__esModule?i:{default:i}).default},function(t,e,n){},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i,o=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}(),s=n(3),r=(i=s)&&i.__esModule?i:{default:i};var u=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.draggableAttr="data-pd-draggable-item",this.containerAttr="data-pd-drop-container",this.dragEl=null,this.dropEl=null,this.ghostEl=null,this.groupId="",this.dragging=!1,this.touchTimeout=null,this.startPoint=null,this.movePoint=null,this.onTouchTimeout=this.onTouchTimeout.bind(this),this.onTouchStart=this.onTouchStart.bind(this),this.onTouchMove=this.onTouchMove.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseMove=this.onMouseMove.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.eventOptions=this.getEventOptions(),this.body=document.body,this.scrollEl=document.scrollingElement||document.documentElement||document,this.bindPassiveEvents()}return o(t,[{key:"getEventOptions",value:function(){var t=!1;try{var e=function(){},n=Object.defineProperty({},"passive",{get:function(){return t=!0,!0}});window.addEventListener("check-passive",e,n),window.removeEventListener("check-passive",e,n)}catch(e){t=!1}return!!t&&{passive:!1}}},{key:"getPoint",value:function(t){var e=t.touch||!!t.touches&&t.touches[0];return e||(e=t),new r.default(e.clientX,e.clientY)}},{key:"getRect",value:function(t){return t.getBoundingClientRect()}},{key:"getMidpoint",value:function(t){var e=this.getRect(t);return new r.default(e.width/2+e.x,e.height/2+e.y)}},{key:"pointToEl",value:function(t){return document.elementFromPoint(t.x,t.y)}},{key:"closest",value:function(t,e){for(;t;){if(e(t))return t;t=t.parentElement}return null}},{key:"closestByAttr",value:function(t,e,n){return this.closest(t,function(t){var i=t.getAttribute(e);return n?i===n:null!==i})}},{key:"closestContainer",value:function(t,e){return this.closestByAttr(t,this.containerAttr,e)}},{key:"closestDraggable",value:function(t,e){return this.closestByAttr(t,this.draggableAttr,e)}},{key:"bindPassiveEvents",value:function(){document.addEventListener("mousedown",this.onMouseDown,this.eventOptions),document.addEventListener("touchstart",this.onTouchStart,this.eventOptions)}},{key:"bindActiveEvents",value:function(){document.addEventListener("mousemove",this.onMouseMove,this.eventOptions),document.addEventListener("mouseup",this.onMouseUp,this.eventOptions),document.addEventListener("touchmove",this.onTouchMove,this.eventOptions),document.addEventListener("touchend",this.onTouchEnd,this.eventOptions)}},{key:"unbindActiveEvents",value:function(){document.removeEventListener("mousemove",this.onMouseMove,this.eventOptions),document.removeEventListener("mouseup",this.onMouseUp,this.eventOptions),document.removeEventListener("touchmove",this.onTouchMove,this.eventOptions),document.removeEventListener("touchend",this.onTouchEnd,this.eventOptions)}},{key:"onMouseDown",value:function(t){var e=this.getPoint(t),n=this.closestDraggable(this.pointToEl(e));n&&(this.dragEl=n,this.startPoint=e,this.bindActiveEvents(),this.dragStart(e))}},{key:"onMouseMove",value:function(t){var e=this.getPoint(t);t.preventDefault(),this.dragMove(e)}},{key:"onMouseUp",value:function(){this.dragEnd(),this.unbindActiveEvents()}},{key:"onTouchTimeout",value:function(){this.dragStart(this.startPoint)}},{key:"onTouchStart",value:function(t){var e=this.getPoint(t),n=this.closestDraggable(this.pointToEl(e));n&&(this.dragEl=n,this.startPoint=e,this.bindActiveEvents(),this.touchTimeout=setTimeout(this.onTouchTimeout,200))}},{key:"onTouchMove",value:function(t){var e=this.getPoint(t);if(!this.dragging)return this.startPoint.checkAxisOffset(e,4)&&(clearTimeout(this.touchTimeout),this.unbindActiveEvents()),void(this.movePoint=e);t.preventDefault(),this.dragMove(e)}},{key:"onTouchEnd",value:function(){clearTimeout(this.touchTimeout),this.dragEnd(),this.unbindActiveEvents()}},{key:"createGhost",value:function(){var t=this.getRect(this.dragEl);this.ghostEl=this.dragEl.cloneNode(!0),this.ghostEl.style.position="absolute",this.ghostEl.style.top=t.y-this.startPoint.y+"px",this.ghostEl.style.left=t.x-this.startPoint.x+"px",this.ghostEl.style.width=t.width+"px",this.ghostEl.style.height=t.height+"px",this.ghostEl.style.pointerEvents="none",this.updateGhostPosition(this.startPoint),this.body.appendChild(this.ghostEl),this.ghostEl.setAttribute("data-pd-ghost","")}},{key:"updateGhostPosition",value:function(t){var e=new r.default(this.scrollEl.scrollLeft,this.scrollEl.scrollTop).add(t);this.ghostEl.style.transform="translate("+e.x+"px, "+e.y+"px)"}},{key:"destroyGhost",value:function(){this.body.removeChild(this.ghostEl)}},{key:"dragStart",value:function(){this.groupId=this.dragEl.getAttribute(this.draggableAttr),null!==this.groupId&&(this.dragging=!0,this.dropEl=this.closestContainer(this.dragEl),this.movePoint&&(this.startPoint=this.movePoint),this.createGhost(),this.dragEl.setAttribute("data-pd-drag",""))}},{key:"dragMove",value:function(t){var e=this;this.updateGhostPosition(t);var n=this.pointToEl(t),i=this.closestContainer(n,this.groupId);if(i&&!this.closest(i,function(t){return t===e.dragEl})){if(i!==this.dropEl)return this.dropEl=i,void this.dropEl.appendChild(this.dragEl);var o=this.closestDraggable(n);if(o&&o!==this.dragEl&&o.parentElement===this.dropEl){var s=o.nextElementSibling,r=s||o.previousElementSibling;if(r){var u=this.getMidpoint(o),h=this.getMidpoint(r).diff(u),a=Math.abs(h.x)>Math.abs(h.y)?"x":"y";if(t[a]<u[a]){if(this.dragEl.nextElementSibling===o)return;this.dropEl.insertBefore(this.dragEl,o)}else if(s){if(this.dragEl===s)return;this.dropEl.insertBefore(this.dragEl,s)}else this.dropEl.appendChild(this.dragEl)}}}}},{key:"dragEnd",value:function(){this.dragging=!1,this.startPoint=null,this.movePoint=null,this.groupId="",this.destroyGhost(),this.dragEl.removeAttribute("data-pd-drag"),this.dragEl=null,this.dropEl=null}}]),t}();e.default=u},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,n,i){return n&&t(e.prototype,n),i&&t(e,i),e}}();var o=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.x=e,this.y=n}return i(t,[{key:"clone",value:function(){return new t(this.x,this.y)}},{key:"add",value:function(t){return this.x+=t.x,this.y+=t.y,this}},{key:"diff",value:function(e){return new t(e.x-this.x,e.y-this.y)}},{key:"checkAxisOffset",value:function(t,e){return Math.abs(t.x-this.x)>e||Math.abs(t.y-this.y)>e}}]),t}();e.default=o}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,